   1  ;; multiplication with add and shift 
   2  ;; 2016-01-19
   3  ;; Christopher Reiterer
   4  
   5  equ prog_start, 0000h 	  ; start address of program rom
   6  equ data_start, 8000h 	  ; start address of data ram
   7  ;equ result_mult1, 8004h
   8  
   9  equ data_mult2, 8008h
  10  ;equ result_mult2, 800Ch
  11  
  12  equ data_mult3, 8010h
  13  ;equ result_mult3, 8014h
  14  
  15  equ data_mult4, 8018h
  16  ;equ result_mult4, 801Ch
  17  
  18  equ data_mult5, 8020h
  19  ;equ result_mult5, 8024h
  20  
  21  equ data_mult6, 8028h
  22  ;equ result_mult6, 802Ch
  23  
  24  equ data_mult7, 8030h
  25  ;equ result_mult7, 8034h
  26  
  27  equ data_mult8, 8038h
  28  ;equ result_mult8, 803Ch
  29  
  30  equ data_mult9, 8040h
  31  ;equ result_mult9, 8044h
  32  
  33  equ data_multA, 8048h
  34  ;equ result_multA, 804Ch
  35  
  36  equ data_multB, 8050h
  37  ;equ result_multB, 8054h
  38  
  39  equ data_multC, 8058h
  40  ;equ result_multC, 805Ch
  41  
  42  equ data_multD, 8060h
  43  ;equ result_multD, 8064h
  44  
  45  equ data_multE, 8068h
  46  ;equ result_multE, 806Ch
  47  
  48  equ data_multF, 8070h
  49  ;equ result_multF, 8074h
  50  
  51  equ data_mult10, 8078h
  52  ;equ result_mult10, 807Ch
  53  
  54  equ mem_dump_addr, 0ffffh
  55  
  56  ;; following all factors and the expected results are listed
  57  org data_start
  58  mult1_1: db 9
  59  mult1_2: db 7
  60  db 0
  61  db 0
  62  result1_h: db 0000h
  63  result1_l: db 003Fh
  64  
  65  org data_mult2
  66  mult2_1: db 0
  67  mult2_2: db 0
  68  db 0
  69  db 0
  70  result2_h: db 0000h
  71  result2_l: db 0000h
  72  
  73  org data_mult3
  74  mult3_1: db 0
  75  mult3_2: db 0FFFFh
  76  db 0
  77  db 0
  78  result3_h: db 0000h
  79  result3_l: db 0000h
  80  
  81  org data_mult4
  82  mult4_1: db 0FFFFh
  83  mult4_2: db 0
  84  db 0
  85  db 0
  86  result4_h: db 0000h
  87  result4_l: db 0000h
  88  
  89  org data_mult5
  90  mult5_1: db 0FFFFh
  91  mult5_2: db 0FFFFh
  92  db 0
  93  db 0
  94  result5_h: db 0FFFEh
  95  result5_l: db 0001h
  96  
  97  org data_mult6
  98  mult6_1: db 0A0Ah
  99  mult6_2: db 0FFFFh
 100  db 0
 101  db 0
 102  result6_h: db 0A09h
 103  result6_l: db 0F5F6h
 104  
 105  org data_mult7
 106  mult7_1: db 0A0A0h
 107  mult7_2: db 0A0Ah
 108  db 0
 109  db 0
 110  result7_h: db 064Ch
 111  result7_l: db 8640h
 112  
 113  org data_mult8
 114  mult8_1: db 1111h
 115  mult8_2: db 0FFFFh
 116  db 0
 117  db 0
 118  result8_h: db 01110h
 119  result8_l: db 0EEEFh
 120  
 121  org data_mult9
 122  mult9_1: db 12394
 123  mult9_2: db 09243
 124  db 0
 125  db 0
 126  result9_h: db 06D4h
 127  result9_l: db 032Eh
 128  
 129  org data_multA
 130  multA_1: db 3490
 131  multA_2: db 598
 132  db 0
 133  db 0
 134  resultA_h: db 001Fh
 135  resultA_l: db 0D86Ch
 136  
 137  org data_multB
 138  multB_1: db 28349
 139  multB_2: db 4298
 140  db 0
 141  db 0
 142  resultB_h: db 0743h
 143  resultB_l: db 3122h
 144  
 145  org data_multC
 146  multC_1: db 4398
 147  multC_2: db 24908
 148  db 0
 149  db 0
 150  resultC_h: db 0687h
 151  resultC_l: db 87A8h
 152  
 153  org data_multD
 154  multD_1: db 24398
 155  multD_2: db 248
 156  db 0
 157  db 0
 158  resultD_h: db 005Ch
 159  resultD_l: db 5390h
 160  
 161  org data_multE
 162  multE_1: db 56809
 163  multE_2: db 498
 164  db 0
 165  db 0
 166  resultE_h: db 01AFh
 167  resultE_l: db 0AF42h
 168  
 169  org data_multF
 170  multF_1: db 4598
 171  multF_2: db 349
 172  db 0
 173  db 0
 174  resultF_h: db 0018h
 175  resultF_l: db 7C5Eh
 176  
 177  org data_mult10
 178  mult10_1: db 0923
 179  mult10_2: db 1
 180  db 0
 181  db 0
 182  result10_h: db 0
 183  result10_l: db 923
 184  
 185  org prog_start
 186  
 187      loadi r1, 8000h		;; start address of data
 188      loadi r2, 16		;; number of multiplications
 189  
 190  loop:
 191  
 192      loadi r0, 16		;; number of iterations for each multiplication
 193  
 194      ;; initialize the result registers
 195      loadi r6, 0000h
 196      loadi r7, 0000h
 197  
 198      loadi r5, 0001h
 199  
 200      ;; load the factors for the multiplication
 201      load r3, r1
 202      add r1, r5
 203  
 204      load r4, r1
 205  
 206  mult:
 207      
 208      ;; shift the operand to the right
 209      ;; -> if a 1 is shifted out (-> carry is set) a summation is needed
 210      shr r3
 211      loadi r5, do_add
 212      jumpc r5
 213      
 214      loadi r5, dont_add;
 215      jump r5
 216  
 217  do_add:
 218      dec r0
 219  
 220      ;; add
 221      add r7, r4
 222  
 223      ;; and shift
 224      shrc r7
 225      shrc r6
 226  
 227      ;; check if all iterations for one multiplication are done
 228      loadi r5, 0000h
 229      comp r0, r5
 230      loadi r5, mult_finish
 231      jumpz r5
 232  
 233      loadi r5, mult
 234      jump r5
 235  
 236  dont_add:
 237      dec r0
 238  
 239      ;; only shift
 240      shr r7
 241      shrc r6
 242      
 243      ;; check if all iterations for one multiplication are done
 244      loadi r5, 0000h
 245      comp r0, r5
 246      loadi r5, mult_finish
 247      jumpz r5
 248  
 249      loadi r5, mult
 250      jump r5
 251  
 252  mult_finish:
 253      ;; multiplication is finished -> store the results
 254      loadi r5, 0001h
 255      add r1, r5
 256      store r7, r1
 257  
 258      add r1, r5
 259      store r6, r1
 260  
 261      ;; prepare address of the next operands
 262      loadi r5, 0005h
 263      add r1, r5
 264  
 265      ;; check if another multiplication has to be done
 266      dec r2
 267      loadi r5, done
 268      jumpz r5
 269  
 270      loadi r5, loop
 271      jump r5
 272  
 273  done:
 274      ;; program finished -> dump results
 275      loadi r2, data_start
 276      loadi r5, mem_dump_addr 
 277      store r2, r5            ; dump memory to file
 278      sleep


      Assembling complete : found 000 Errors
                            found 000 Warnings

      Labels              Address
      ---------------------------
      MULT1_1             0000h
      MULT1_2             0001h
      RESULT1_H           0004h
      RESULT1_L           0005h
      MULT2_1             0008h
      MULT2_2             0009h
      RESULT2_H           000Ch
      RESULT2_L           000Dh
      MULT3_1             0010h
      MULT3_2             0011h
      RESULT3_H           0014h
      RESULT3_L           0015h
      MULT4_1             0018h
      MULT4_2             0019h
      RESULT4_H           001Ch
      RESULT4_L           001Dh
      MULT5_1             0020h
      MULT5_2             0021h
      RESULT5_H           0024h
      RESULT5_L           0025h
      MULT6_1             0028h
      MULT6_2             0029h
      RESULT6_H           002Ch
      RESULT6_L           002Dh
      MULT7_1             0030h
      MULT7_2             0031h
      RESULT7_H           0034h
      RESULT7_L           0035h
      MULT8_1             0038h
      MULT8_2             0039h
      RESULT8_H           003Ch
      RESULT8_L           003Dh
      MULT9_1             0040h
      MULT9_2             0041h
      RESULT9_H           0044h
      RESULT9_L           0045h
      MULTA_1             0048h
      MULTA_2             0049h
      RESULTA_H           004Ch
      RESULTA_L           004Dh
      MULTB_1             0050h
      MULTB_2             0051h
      RESULTB_H           0054h
      RESULTB_L           0055h
      MULTC_1             0058h
      MULTC_2             0059h
      RESULTC_H           005Ch
      RESULTC_L           005Dh
      MULTD_1             0060h
      MULTD_2             0061h
      RESULTD_H           0064h
      RESULTD_L           0065h
      MULTE_1             0068h
      MULTE_2             0069h
      RESULTE_H           006Ch
      RESULTE_L           006Dh
      MULTF_1             0070h
      MULTF_2             0071h
      RESULTF_H           0074h
      RESULTF_L           0075h
      MULT10_1            0078h
      MULT10_2            0079h
      RESULT10_H          007Ch
      RESULT10_L          007Dh
      LOOP                0004h
      MULT                000Fh
      DO_ADD              0016h
      DONT_ADD            0023h
      MULT_FINISH         002Fh
      DONE                003Fh

      Constants           Value  
      ---------------------------
      PROG_START          0000h
      DATA_START          0000h
      DATA_MULT2          0008h
      DATA_MULT3          0010h
      DATA_MULT4          0018h
      DATA_MULT5          0020h
      DATA_MULT6          0028h
      DATA_MULT7          0030h
      DATA_MULT8          0038h
      DATA_MULT9          0040h
      DATA_MULTA          0048h
      DATA_MULTB          0050h
      DATA_MULTC          0058h
      DATA_MULTD          0060h
      DATA_MULTE          0068h
      DATA_MULTF          0070h
      DATA_MULT10         0078h
      MEM_DUMP_ADDR       00FFh


      Contents of Memory: Program-Code ROM
      ------------------------------------

0000hex  LOADI   R1, 8000hex            000010_00001_00000  1000000000000000
0002hex  LOADI   R2, 0010hex            000010_00010_00000  0000000000010000
0004hex  LOADI   R0, 0010hex            000010_00000_00000  0000000000010000
0006hex  LOADI   R6, 0000hex            000010_00110_00000  0000000000000000
0008hex  LOADI   R7, 0000hex            000010_00111_00000  0000000000000000
000Ahex  LOADI   R5, 0001hex            000010_00101_00000  0000000000000001
000Chex  LOAD    R3, R1                 000011_00011_00001
000Dhex  ADD     R1, R5                 010100_00001_00101
000Ehex  LOAD    R4, R1                 000011_00100_00001
000Fhex  SHR     R3                     011101_00011_00000
0010hex  LOADI   R5, 0016hex            000010_00101_00000  0000000000010110
0012hex  JUMPC   R5                     001010_00101_00000
0013hex  LOADI   R5, 0023hex            000010_00101_00000  0000000000100011
0015hex  JUMP    R5                     001000_00101_00000
0016hex  DEC     R0                     011011_00000_00000
0017hex  ADD     R7, R4                 010100_00111_00100
0018hex  SHRC    R7                     011111_00111_00000
0019hex  SHRC    R6                     011111_00110_00000
001Ahex  LOADI   R5, 0000hex            000010_00101_00000  0000000000000000
001Chex  COMP    R0, R5                 011000_00000_00101
001Dhex  LOADI   R5, 002Fhex            000010_00101_00000  0000000000101111
001Fhex  JUMPZ   R5                     001011_00101_00000
0020hex  LOADI   R5, 000Fhex            000010_00101_00000  0000000000001111
0022hex  JUMP    R5                     001000_00101_00000
0023hex  DEC     R0                     011011_00000_00000
0024hex  SHR     R7                     011101_00111_00000
0025hex  SHRC    R6                     011111_00110_00000
0026hex  LOADI   R5, 0000hex            000010_00101_00000  0000000000000000
0028hex  COMP    R0, R5                 011000_00000_00101
0029hex  LOADI   R5, 002Fhex            000010_00101_00000  0000000000101111
002Bhex  JUMPZ   R5                     001011_00101_00000
002Chex  LOADI   R5, 000Fhex            000010_00101_00000  0000000000001111
002Ehex  JUMP    R5                     001000_00101_00000
002Fhex  LOADI   R5, 0001hex            000010_00101_00000  0000000000000001
0031hex  ADD     R1, R5                 010100_00001_00101
0032hex  STORE   R7, R1                 000100_00111_00001
0033hex  ADD     R1, R5                 010100_00001_00101
0034hex  STORE   R6, R1                 000100_00110_00001
0035hex  LOADI   R5, 0005hex            000010_00101_00000  0000000000000101
0037hex  ADD     R1, R5                 010100_00001_00101
0038hex  DEC     R2                     011011_00010_00000
0039hex  LOADI   R5, 003Fhex            000010_00101_00000  0000000000111111
003Bhex  JUMPZ   R5                     001011_00101_00000
003Chex  LOADI   R5, 0004hex            000010_00101_00000  0000000000000100
003Ehex  JUMP    R5                     001000_00101_00000
003Fhex  LOADI   R2, 8000hex            000010_00010_00000  1000000000000000
0041hex  LOADI   R5, FFFFhex            000010_00101_00000  1111111111111111
0043hex  STORE   R2, R5                 000100_00010_00101
0044hex  SLEEP                          000001_00000_00000


      Contents of Memory: Working RAM
      ---------------------------------


8000hex  0000000000001001
8001hex  0000000000000111
8002hex  0000000000000000
8003hex  0000000000000000
8004hex  0000000000000000
8005hex  0000000000111111

8008hex  0000000000000000
8009hex  0000000000000000
800Ahex  0000000000000000
800Bhex  0000000000000000
800Chex  0000000000000000
800Dhex  0000000000000000

8010hex  0000000000000000
8011hex  1111111111111111
8012hex  0000000000000000
8013hex  0000000000000000
8014hex  0000000000000000
8015hex  0000000000000000

8018hex  1111111111111111
8019hex  0000000000000000
801Ahex  0000000000000000
801Bhex  0000000000000000
801Chex  0000000000000000
801Dhex  0000000000000000

8020hex  1111111111111111
8021hex  1111111111111111
8022hex  0000000000000000
8023hex  0000000000000000
8024hex  1111111111111110
8025hex  0000000000000001

8028hex  0000101000001010
8029hex  1111111111111111
802Ahex  0000000000000000
802Bhex  0000000000000000
802Chex  0000101000001001
802Dhex  1111010111110110

8030hex  1010000010100000
8031hex  0000101000001010
8032hex  0000000000000000
8033hex  0000000000000000
8034hex  0000011001001100
8035hex  1000011001000000

8038hex  0001000100010001
8039hex  1111111111111111
803Ahex  0000000000000000
803Bhex  0000000000000000
803Chex  0001000100010000
803Dhex  1110111011101111

8040hex  0011000001101010
8041hex  0010010000011011
8042hex  0000000000000000
8043hex  0000000000000000
8044hex  0000011011010100
8045hex  0000001100101110

8048hex  0000110110100010
8049hex  0000001001010110
804Ahex  0000000000000000
804Bhex  0000000000000000
804Chex  0000000000011111
804Dhex  1101100001101100

8050hex  0110111010111101
8051hex  0001000011001010
8052hex  0000000000000000
8053hex  0000000000000000
8054hex  0000011101000011
8055hex  0011000100100010

8058hex  0001000100101110
8059hex  0110000101001100
805Ahex  0000000000000000
805Bhex  0000000000000000
805Chex  0000011010000111
805Dhex  1000011110101000

8060hex  0101111101001110
8061hex  0000000011111000
8062hex  0000000000000000
8063hex  0000000000000000
8064hex  0000000001011100
8065hex  0101001110010000

8068hex  1101110111101001
8069hex  0000000111110010
806Ahex  0000000000000000
806Bhex  0000000000000000
806Chex  0000000110101111
806Dhex  1010111101000010

8070hex  0001000111110110
8071hex  0000000101011101
8072hex  0000000000000000
8073hex  0000000000000000
8074hex  0000000000011000
8075hex  0111110001011110

8078hex  0000001110011011
8079hex  0000000000000001
807Ahex  0000000000000000
807Bhex  0000000000000000
807Chex  0000000000000000
807Dhex  0000001110011011
